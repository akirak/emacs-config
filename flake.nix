{
  inputs = {
    utils.url = "github:numtide/flake-utils";
    flake-utils-plus.url = "github:gytis-ivaskevicius/flake-utils-plus/v1.3.1";
  };

  outputs = { self, nixpkgs, flake-utils-plus, utils, ... } @ inputs:
    let
      inherit (builtins) removeAttrs;
      mkApp = utils.lib.mkApp;
      pkgs = self.pkgs.x86_64-linux.nixpkgs;
    in
    flake-utils-plus.lib.mkFlake {
      inherit self inputs;

      supportedSystems = [ "x86_64-linux" ];

      channelsConfig = {
        allowBroken = false;
      };

      # sharedOverlays = [ nur.overlay ];

      # Nixpkgs flake reference to be used in the configuration.
      # Autogenerated from `inputs` by default.
      # channels.<name> = {}

      hostsDefaults = {
        system = "x86_64-linux";

        # Default modules to be passed to all hosts.
        modules = [
        ];

        # channelName = "unstable";
        # extraArgs = { inherit utils inputs; foo = "foo"; };
      };

      #############
      ### hosts ###
      #############

      hosts.container = {
        modules =
          [
            ({ pkgs, ... }: {
              boot.isContainer = true;

              # Let 'nixos-version --json' know about the Git revision of this
              # flake.
              system.configurationRevision = nixpkgs.lib.mkIf (self ? rev) self.rev;

              # Network configuration.
              networking.useDHCP = false;
              networking.firewall.allowedTCPPorts = [ 80 ];

              # Enable a web server.
              services.httpd = {
                enable = true;
                adminAddr = "morty@example.org";
              };
            })
          ];
      };

      #############################
      ### flake outputs builder ###
      #############################

      outputsBuilder = _channels: {
        # apps = {};
        # packages = {};
      };

      #########################################################
      ### All other properties are passed down to the flake ###
      #########################################################

      # checks.x86_64-linux.someCheck = pkgs.hello;
      # packages.x86_64-linux.somePackage = pkgs.hello;
      # overlay = import ./overlays;
      # abc = 132;
    };
}
